{
  "swagger": "2.0",
  "info": {
    "description": "User Groups Server",
    "version": "1.0.0",
    "title": "SuS User Groups",
    "termsOfService": "http://simuspace.de/terms/",
    "contact": {
      "email": "sus@simuspace.de"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "t5",
  "basePath": "/v1",
  "tags": [
    {
      "name": "group",
      "description": "User group",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://simuspace.de"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/group": {
      "post": {
        "tags": [
          "group"
        ],
        "summary": "Add a new user group",
        "description": "",
        "operationId": "createUserGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "create new user Group with multiple or empty userslist",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "group"
        ],
        "summary": "Update an existing user Group",
        "description": "",
        "operationId": "updateUserGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User Group need to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User2"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/group/": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "Get All User Groups List",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "getUserGroupsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "available",
                "pending",
                "sold"
              ],
              "default": "available"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User2"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/group/{Id}": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "Find user group By Id",
        "description": "Returns user Group with given Id",
        "operationId": "readUserGroup",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User2"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "group"
        ],
        "summary": "Deletes user Group",
        "description": "",
        "operationId": "deleteUserGroup",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Pet id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "UserGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of user group"
        },
        "description": {
          "type": "string",
          "description": "Description of user group"
        },
        "status": {
          "type": "boolean",
          "default": true,
          "description": "Active= true and InActive= false"
        },
        "users": {
          "type": "array",
          "xml": {
            "name": "userslist",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/User2"
          }
        }
      },
      "xml": {
        "name": "UserGroup"
      }
    },
    "User2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "User2"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}